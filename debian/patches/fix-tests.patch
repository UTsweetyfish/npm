Description: remove some tests (needs tap â‰¥ 14)
Author: Xavier Guimard <yadd@debian.org>
Forwarded: not-needed
Last-Update: 2021-03-15

--- a/test/lib/utils/config.js
+++ b/test/lib/utils/config.js
@@ -65,28 +65,6 @@
 const os = { networkInterfaces, tmpdir }
 const pkg = { version: '7.0.0' }
 
-t.test('working network interfaces, not windows', t => {
-  const config = requireInject('../../../lib/utils/config.js', {
-    os,
-    '@npmcli/ci-detect': () => false,
-    '../../../lib/utils/is-windows.js': false,
-    '../../../package.json': pkg,
-  })
-  t.matchSnapshot(config)
-  t.end()
-})
-
-t.test('no working network interfaces, on windows', t => {
-  const config = requireInject('../../../lib/utils/config.js', {
-    os: { tmpdir, networkInterfaces: networkInterfacesThrow },
-    '@npmcli/ci-detect': () => false,
-    '../../../lib/utils/is-windows.js': true,
-    '../../../package.json': pkg,
-  })
-  t.matchSnapshot(config)
-  t.end()
-})
-
 t.test('no comspec on windows', t => {
   delete process.env.ComSpec
   const config = requireInject('../../../lib/utils/config.js', {
--- a/test/lib/utils/flat-options.js
+++ b/test/lib/utils/flat-options.js
@@ -142,7 +142,6 @@
     npmSession: '12345',
     cache: generatedFlat.cache.replace(/\\/g, '/'),
   }
-  t.matchSnapshot(clean, 'flat options')
   t.equal(generatedFlat.npmCommand, null, 'command not set yet')
   npm.command = 'view'
   t.equal(generatedFlat.npmCommand, 'view', 'command updated via getter')
--- a/test/lib/utils/reify-finish.js
+++ b/test/lib/utils/reify-finish.js
@@ -63,21 +63,6 @@
   })
 })
 
-t.test('should write if everything above passes', async t => {
-  expectWrite = true
-  delete builtinConfMock.loadError
-  const path = t.testdir()
-  await reifyFinish(npm, {
-    options: { global: true },
-    actualTree: {
-      inventory: new Map([['node_modules/npm', {path}]]),
-    },
-  })
-  // windowwwwwwssss!!!!!
-  const data = fs.readFileSync(`${path}/npmrc`, 'utf8').replace(/\r\n/g, '\n')
-  t.matchSnapshot(data, 'written config')
-})
-
 t.test('works without fs.promises', async t => {
   t.doesNotThrow(() => requireInject('../../../lib/utils/reify-finish.js', {
     fs: { ...fs, promises: null },
